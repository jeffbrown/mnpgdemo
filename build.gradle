buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.2.0'
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
    id "net.ltgt.apt-eclipse" version "0.21"
}

apply plugin: 'com.google.cloud.tools.appengine'

version "0.1"
group "mnpgdemo"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut.data:micronaut-data-processor"
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut.data:micronaut-data-jdbc"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    runtimeOnly 'com.google.cloud.sql:postgres-socket-factory:1.0.15'
    runtimeOnly 'org.postgresql:postgresql:42.2.2'
    runtimeOnly 'io.micronaut.configuration:micronaut-jdbc-hikari'
    compileOnly 'jakarta.persistence:jakarta.persistence-api:2.2.2'
    runtimeOnly 'com.h2database:h2'
}

test.classpath += configurations.developmentOnly

mainClassName = "mnpgdemo.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

appengine {
    stage {
        artifact = 'build/libs/mnpgdemo-0.1-all.jar'
    }
    deploy {
        stopPreviousVersion = true
        promote = true
        projectId = 'oci-micronaut-innovation'
        version = 'GCLOUD_CONFIG'
    }
}
